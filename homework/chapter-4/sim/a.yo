                            | # 从地址 0 开始执行
0x000:                      | .pos 0
0x000: 30f40002000000000000 | irmovq stack, %rsp      # Set up stack pointer
0x00a: 805000000000000000   | call main        # Execute main program
0x013: 00                   | halt                            # Terminate program 
                            | 
                            | # 跳转表
0x018:                      | .align 8
0x018:                      | table:
0x018: 5e01000000000000     | .quad 0x00000000015e
0x020: 7f01000000000000     | .quad 0x00000000017f
0x028: 6901000000000000     | .quad 0x000000000169
0x030: 7401000000000000     | .quad 0x000000000174
0x038: 7f01000000000000     | .quad 0x00000000017f
0x040: 6901000000000000     | .quad 0x000000000169
0x048: 7f01000000000000     | .quad 0x00000000017f
                            | 
                            | # 主函数
0x050:                      | main:
0x050: 30f70100000000000000 | irmovq $1,%rdi
0x05a: 800001000000000000   | call switchv    # switchv(3)
0x063: 90                   | ret
                            | 
0x100:                      |         .pos 0x100
                            | # long switchv(long idx)
                            | # idx in %rdi
                            | # 地址：0x100
0x100:                      |         switchv:
0x100: 30f8aa0a000000000000 |         irmovq 0xaaa, %r8# %r8 = 0xaaa
0x10a: 30f9bb0b000000000000 |         irmovq 0xbbb, %r9             # %r9 = 0xbbb
0x114: 30facc0c000000000000 |         irmovq 0xccc, %r10# %r10 = 0xccc
0x11e: 30fbdd0d000000000000 |         irmovq 0xddd, %r11  # %r11 = 0x‭ddd
0x128: 30fc0500000000000000 |         irmovq $5, %r12 # %r12 = 5
0x132: 30fd1800000000000000 |         irmovq table, %r13                          # %r13 = table
0x13c: 2072                 |         rrmovq %rdi, %rdx
0x13e: 61c2                 |         subq %r12, %rdx     # idx - 5
0x140: 767f01000000000000   |         jg default         # idx > 5 -> jmp default
0x149: 6077                 |         addq %rdi, %rdi         # idx = 2 * idx
0x14b: 6077                 |         addq %rdi, %rdi     # idx = 4 * idx
0x14d: 6077                 |         addq %rdi, %rdi     # idx = 8 * idx
0x14f: 607d                 |         addq %rdi, %r13     # %r13 = table + 8 * idx
0x151: 50dd0000000000000000 |         mrmovq (%r13), %r13
0x15b: a0df                 |         pushq %r13
0x15d: 90                   |         ret
                            | # 地址：0x15e
0x15e: 2080                 |         rrmovq %r8, %rax
0x160: 708101000000000000   |         jmp Done
                            | # 地址：0x169
0x169: 2090                 |         rrmovq %r9, %rax
0x16b: 708101000000000000   |         jmp Done
                            | # 地址：0x174
0x174: 20a0                 |         rrmovq %r10, %rax
0x176: 708101000000000000   |         jmp Done
                            | # 地址：0x17f
0x17f:                      |     default:
0x17f: 20b0                 |         rrmovq %r11, %rax
0x181:                      |             Done:
0x181: 90                   |             ret
                            | 
                            | # 栈从 0x200 向低地址生长
0x200:                      |             .pos 0x200
0x200:                      |             stack:
